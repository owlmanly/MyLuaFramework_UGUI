//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_EventSystems_PointerInputModuleWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.EventSystems.PointerInputModule), typeof(UnityEngine.EventSystems.BaseInputModule));
		L.RegFunction("IsPointerOverGameObject", IsPointerOverGameObject);
		L.RegFunction("ToString", ToString);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegConstant("kMouseLeftId", -1);
		L.RegConstant("kMouseRightId", -2);
		L.RegConstant("kMouseMiddleId", -3);
		L.RegConstant("kFakeTouchesId", -4);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsPointerOverGameObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.EventSystems.PointerInputModule obj = (UnityEngine.EventSystems.PointerInputModule)ToLua.CheckObject(L, 1, typeof(UnityEngine.EventSystems.PointerInputModule));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.IsPointerOverGameObject(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ToString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.EventSystems.PointerInputModule obj = (UnityEngine.EventSystems.PointerInputModule)ToLua.CheckObject(L, 1, typeof(UnityEngine.EventSystems.PointerInputModule));
			string o = obj.ToString();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

